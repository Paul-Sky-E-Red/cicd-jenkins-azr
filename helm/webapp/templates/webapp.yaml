---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.name }}
    name: {{ .Values.name }}
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: {{ .Values.name }}
      name: {{ .Values.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
        name: {{ .Values.name }}
    spec:
      containers:
      - name: {{ .Values.name }}
        image: "{{ if .Values.image.registry }}{{ .Values.image.registry }}/{{ end }}{{ .Values.image.name }}:{{ if .Values.image.tag }}{{ .Values.image.tag }}{{ else }}{{ .Chart.Version }}{{ end }}"
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: "100m"
            memory: "128Mi"
        readinessProbe:
          httpGet:
            path: /
            port: 80
        livenessProbe:
          httpGet:
            path: /
            port: 80
        volumeMounts:
        - name: webapp-welcome
          mountPath: /usr/share/nginx/html/index.html
          subPath: index.html
      volumes:
      - name: webapp-welcome
        configMap:
          items:
          - key: index.html
            path: index.html
          name: webapp-welcome
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: webapp-welcome
  namespace: {{ .Values.namespace }}
data:
  index.html: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Welcome to {{ .Values.name }}</title>
    </head>
    <body>
        <h1>Welcome to {{ .Values.name }}</h1>
        <p>This is a simple web application deployed using Helm.</p>
        <p>Registry: {{ .Values.image.registry | default "default" | quote }}</p>
        <p>Image: {{ .Values.image.name }}:{{ if .Values.image.tag }}{{ .Values.image.tag }}{{ else }}{{ .Chart.Version }}{{ end }}</p>
        <p>Namespace: {{ .Values.namespace }}</p>
        <p>Helmchart Name: {{ .Chart.Name | default "n/a" | quote }}</p>
        <p>Helmchart Description: {{ .Chart.Description | default "n/a" | quote }}</p>
        <p>Helmchart Version: {{ .Chart.Version | default "n/a" | quote }}</p>
        <p>Helmchart App Version: {{ .Chart.AppVersion | default "n/a" | quote}}</p>
        <p>Helmchart Release Revision: {{ .Release.Revision | default "n/a" | quote }}</p>
        <p>Helmchart Release Name: {{ .Release.Name | default "n/a" | quote }}</p>
        <p>Public URL: https://{{ .Values.public.fqdn }}/{{ .Values.name }}</p>
    </body>
    </html>
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
spec:
  selector:
    app: {{ .Values.name }}
    name: {{ .Values.name }}
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
  type: ClusterIP
{{- if .Values.public.fqdn }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
  annotations:
    kubernetes.io/ingress.class: traefik
    cert-manager.io/cluster-issuer: letsencrypt-prod
    traefik.ingress.kubernetes.io/router.middlewares: default-redirect-https@kubernetescrd,default-rewrite-prefix@kubernetescrd
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: traefik
  rules:
  - host: {{ .Values.public.fqdn }}
    http:
      paths:
      - path: /{{ .Values.name }}
        pathType: Prefix
        backend:
          service:
            name: {{ .Values.name }}
            port:
              number: 80
  tls:
  - hosts:
    - {{ .Values.public.fqdn }}
    secretName: default-tls
{{- end }}